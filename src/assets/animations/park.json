{
  "v": "4.8.0",
  "meta": { "g": "LottieFiles AE 1.1.0", "a": "", "k": "", "d": "", "tc": "" },
  "fr": 30,
  "ip": 0,
  "op": 129,
  "w": 60,
  "h": 60,
  "nm": "tree",
  "ddd": 0,
  "assets": [],
  "layers": [
    {
      "ddd": 0,
      "ind": 1,
      "ty": 4,
      "nm": "Trunk Outlines",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [29.28, 42.32, 0], "ix": 2 },
        "a": { "a": 0, "k": [5.886, 10.429, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ind": 0,
              "ty": "sh",
              "ix": 1,
              "ks": {
                "a": 0,
                "k": {
                  "i": [
                    [0, 0],
                    [0, 0],
                    [0.553, -0.286],
                    [0.502, 0.501],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, -0.436],
                    [0, 0],
                    [-0.791, 0],
                    [0, 0],
                    [0, 0.792],
                    [0, 0],
                    [-0.309, 0.309],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0.64, 0.329],
                    [0, 0.623],
                    [0, 0]
                  ],
                  "o": [
                    [0, 0],
                    [0, 0.623],
                    [-0.641, 0.33],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0.308, 0.308],
                    [0, 0],
                    [0, 0.792],
                    [0, 0],
                    [0.792, 0],
                    [0, 0],
                    [0, -0.436],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [-0.501, 0.501],
                    [-0.554, -0.284],
                    [0, 0],
                    [0, 0]
                  ],
                  "v": [
                    [-0.551, -10.179],
                    [-0.551, -8.369],
                    [-1.432, -6.869],
                    [-3.338, -7.165],
                    [-4.522, -8.349],
                    [-5.636, -7.235],
                    [-2.869, -4.469],
                    [-2.391, -3.315],
                    [-2.391, 8.745],
                    [-0.958, 10.179],
                    [1.431, 10.179],
                    [2.865, 8.745],
                    [2.865, -1.501],
                    [3.343, -2.656],
                    [5.636, -4.949],
                    [4.522, -6.062],
                    [3.811, -5.352],
                    [1.907, -5.056],
                    [1.024, -6.554],
                    [1.024, -10.179]
                  ],
                  "c": true
                },
                "ix": 2
              },
              "nm": "Path 1",
              "mn": "ADBE Vector Shape - Group",
              "hd": false
            },
            {
              "ty": "fl",
              "c": { "a": 0, "k": [0, 0, 0, 1], "ix": 4 },
              "o": { "a": 0, "k": 100, "ix": 5 },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [5.886, 10.429], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 210,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 3,
      "ty": 4,
      "nm": "Tree Outlines",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 0,
              "s": [0]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 32,
              "s": [5]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 64,
              "s": [0]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 96,
              "s": [-5]
            },
            { "t": 128, "s": [0] }
          ],
          "ix": 10,
          "x": "var $bm_rt;\nfunction doIt() {\n    var easingEquation, val1, val2, val3;\n    var ew_one = backOut;\n    var ew_two = expoIn;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n        if (n < 2) {\n            easingEquation = ew_one;\n        } else if (n >= $bm_sub(numKeys, 1)) {\n            easingEquation = ew_two;\n        } else {\n            return null;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    var t = $bm_sub(time, key1.time);\n    var d = $bm_sub(key2.time, key1.time);\n    var sX = key1[0];\n    var eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        var sY = key1[1];\n        var eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            var sZ = key1[2];\n            var eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easingEquation(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easingEquation(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easingEquation(t, sY, eY, d);\n            val3 = easingEquation(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\nvar IN_EXPO_CORRECTION = 0.000976563;\nvar OUT_EXPO_CORRECTION = 1.000976563;\nvar s = 1.70158;\nvar p = 0.81;\nvar a = 50;\nfunction bounceOut(t, b, c, d) {\n    if ((t /= d) < 1 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_mul($bm_mul(7.5625, t), t)), b);\n    } else if (t < 2 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 1.5 / 2.75), t), 0.75)), b);\n    } else if (t < 2.5 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 2.25 / 2.75), t), 0.9375)), b);\n    } else {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 2.625 / 2.75), t), 0.984375)), b);\n    }\n}\nfunction bounceIn(t, b, c, d) {\n    return $bm_sum($bm_sub(c, bounceOut($bm_sub(d, t), 0, c, d)), b);\n}\nfunction bounceInOut(t, b, c, d) {\n    if (t < $bm_div(d, 2))\n        return $bm_sum($bm_mul(bounceIn($bm_mul(t, 2), 0, c, d), 0.5), b);\n    else\n        return bounceOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n}\nfunction backIn(t, b, c, d) {\n    return $bm_sum($bm_mul($bm_mul($bm_mul(c, t /= d), t), $bm_sub($bm_mul($bm_sum(s, 1), t), s)), b);\n}\nfunction backInOut(t, b, c, d) {\n    if ((t /= d / 2) < 1)\n        return $bm_sum($bm_mul($bm_div(c, 2), $bm_mul($bm_mul(t, t), $bm_sub($bm_mul($bm_sum(s *= 1.525, 1), t), s))), b);\n    return $bm_sum($bm_mul($bm_div(c, 2), $bm_sum($bm_mul($bm_mul(t -= 2, t), $bm_sum($bm_mul($bm_sum(s *= 1.525, 1), t), s)), 2)), b);\n}\nfunction backOut(t, b, c, d) {\n    return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(t = t / d - 1, t), $bm_sum($bm_mul($bm_sum(s, 1), t), s)), 1)), b);\n}\nfunction circIn(t, b, c, d) {\n    return $bm_sum($bm_mul($bm_neg(c), $bm_sub(Math.sqrt($bm_sub(1, $bm_mul(t /= d, t))), 1)), b);\n}\nfunction circInOut(t, b, c, d) {\n    if ((t /= d / 2) < 1)\n        return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub(Math.sqrt($bm_sub(1, $bm_mul(t, t))), 1)), b);\n    return $bm_sum($bm_mul($bm_div(c, 2), $bm_sum(Math.sqrt($bm_sub(1, $bm_mul(t -= 2, t))), 1)), b);\n}\nfunction circOut(t, b, c, d) {\n    return $bm_sum($bm_mul(c, Math.sqrt($bm_sub(1, $bm_mul(t = t / d - 1, t)))), b);\n}\nfunction elasticIn(t, b, c, d) {\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin($bm_div(c, a)));\n    return $bm_sum($bm_neg($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p)))), b);\n}\nfunction elasticInOut(t, b, c, d) {\n    if (t == 0)\n        return b;\n    if ((t /= d / 2) == 2)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3 * 1.5);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin($bm_div(c, a)));\n    if (t < 1)\n        return $bm_sum($bm_mul(-0.5, $bm_mul($bm_mul(a, Math.pow(2, $bm_mul(10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p)))), b);\n    return $bm_sum($bm_sum($bm_mul($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(-10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p))), 0.5), c), b);\n}\nfunction elasticOut(t, b, c, d) {\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin($bm_div(c, a)));\n    return $bm_sum($bm_sum($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(-10, t))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p))), c), b);\n}\nfunction expoIn(t, b, c, d) {\n    return t == 0 ? b : c * (Math.pow(2, 10 * (t / d - 1)) - IN_EXPO_CORRECTION) + b;\n}\nfunction expoInOut(t, b, c, d) {\n    var v;\n    if ((t /= d / 2) < 1) {\n        v = $bm_sub(Math.pow(2, $bm_mul(10, $bm_sub(t, 1))), IN_EXPO_CORRECTION);\n    } else {\n        v = $bm_sum($bm_sum($bm_neg(Math.pow(2, $bm_mul(-10, $bm_sub(t, 1)))), 2), IN_EXPO_CORRECTION);\n    }\n    return $bm_sum(b, $bm_mul($bm_div(v, 2), c));\n}\nfunction expoOut(t, b, c, d) {\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction quadIn(t, b, c, d) {\n    return $bm_sum($bm_mul($bm_mul(c, t /= d), t), b);\n}\nfunction quadInOut(t, b, c, d) {\n    if ((t /= d / 2) < 1)\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\n}\nfunction quadOut(t, b, c, d) {\n    return $bm_sum($bm_mul($bm_mul($bm_neg(c), t /= d), $bm_sub(t, 2)), b);\n}\nfunction quartIn(t, b, c, d) {\n    return $bm_sum($bm_mul($bm_mul($bm_mul($bm_mul(c, t /= d), t), t), t), b);\n}\nfunction quartInOut(t, b, c, d) {\n    if ((t /= d / 2) < 1)\n        return $bm_sum($bm_mul($bm_mul($bm_mul($bm_mul($bm_div(c, 2), t), t), t), t), b);\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul($bm_mul($bm_mul(t -= 2, t), t), t), 2)), b);\n}\nfunction quartOut(t, b, c, d) {\n    return $bm_sum($bm_mul($bm_neg(c), $bm_sub($bm_mul($bm_mul($bm_mul(t = t / d - 1, t), t), t), 1)), b);\n}\nfunction quintIn(t, b, c, d) {\n    return $bm_sum($bm_mul($bm_mul($bm_mul($bm_mul($bm_mul(c, t /= d), t), t), t), t), b);\n}\nfunction quintInOut(t, b, c, d) {\n    if ((t /= d / 2) < 1)\n        return $bm_sum($bm_mul($bm_mul($bm_mul($bm_mul($bm_mul($bm_div(c, 2), t), t), t), t), t), b);\n    return $bm_sum($bm_mul($bm_div(c, 2), $bm_sum($bm_mul($bm_mul($bm_mul($bm_mul(t -= 2, t), t), t), t), 2)), b);\n}\nfunction quintOut(t, b, c, d) {\n    return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul($bm_mul($bm_mul(t = t / d - 1, t), t), t), t), 1)), b);\n}\nfunction sineIn(t, b, c, d) {\n    return $bm_sum($bm_sum($bm_mul($bm_neg(c), Math.cos($bm_mul($bm_div(t, d), $bm_div(Math.PI, 2)))), c), b);\n}\nfunction sineInOut(t, b, c, d) {\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub(Math.cos($bm_div($bm_mul(Math.PI, t), d)), 1)), b);\n}\nfunction sineOut(t, b, c, d) {\n    return $bm_sum($bm_mul(c, Math.sin($bm_mul($bm_div(t, d), $bm_div(Math.PI, 2)))), b);\n}\n$bm_rt = doIt() || value;"
        },
        "p": { "a": 0, "k": [29.676, 25.749, 0], "ix": 2 },
        "a": { "a": 0, "k": [22, 18.5, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ind": 0,
              "ty": "sh",
              "ix": 1,
              "ks": {
                "a": 0,
                "k": {
                  "i": [
                    [0, 2.686],
                    [5.165, 0.391],
                    [5.479, 0],
                    [1.803, -5.08],
                    [0, -5.264],
                    [-1.885, -1.873],
                    [0, -0.472],
                    [-4.85, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0.437],
                    [-0.309, 0.308],
                    [0, 0],
                    [-0.636, -0.636],
                    [0, 0],
                    [0, 0],
                    [-0.9, 0],
                    [0, 0],
                    [0, -0.9],
                    [0, 0],
                    [0, 0],
                    [-0.436, 0],
                    [-0.309, -0.308],
                    [0, 0],
                    [0, 0],
                    [0.636, -0.636],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 4.85],
                    [0.076, 0.466]
                  ],
                  "o": [
                    [0, -5.264],
                    [-1.803, -5.08],
                    [-5.48, 0],
                    [-5.165, 0.391],
                    [0, 2.686],
                    [-0.076, 0.466],
                    [0, 4.85],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [-0.308, -0.308],
                    [0, -0.436],
                    [0, 0],
                    [0.636, -0.636],
                    [0, 0],
                    [0, 0],
                    [0, -0.9],
                    [0, 0],
                    [0.9, 0],
                    [0, 0],
                    [0, 0],
                    [0.308, -0.308],
                    [0.436, 0],
                    [0, 0],
                    [0, 0],
                    [0.636, 0.636],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [4.85, 0],
                    [0, -0.472],
                    [1.885, -1.873]
                  ],
                  "v": [
                    [21.354, 0.607],
                    [12.105, -9.375],
                    [0, -17.911],
                    [-12.105, -9.375],
                    [-21.354, 0.607],
                    [-18.404, 7.704],
                    [-18.518, 9.115],
                    [-9.723, 17.911],
                    [-4.497, 17.911],
                    [-4.497, 13.793],
                    [-7.459, 10.831],
                    [-7.937, 9.676],
                    [-7.459, 8.521],
                    [-5.676, 6.738],
                    [-3.368, 6.738],
                    [-2.657, 7.451],
                    [-2.657, 6.26],
                    [-1.024, 4.627],
                    [1.497, 4.627],
                    [3.129, 6.26],
                    [3.129, 9.264],
                    [3.367, 9.026],
                    [4.521, 8.548],
                    [5.676, 9.026],
                    [7.458, 10.809],
                    [7.459, 10.809],
                    [7.459, 13.117],
                    [4.97, 15.605],
                    [4.97, 17.911],
                    [9.722, 17.911],
                    [18.517, 9.115],
                    [18.403, 7.704]
                  ],
                  "c": true
                },
                "ix": 2
              },
              "nm": "Path 1",
              "mn": "ADBE Vector Shape - Group",
              "hd": false
            },
            {
              "ty": "fl",
              "c": { "a": 0, "k": [0, 0, 0, 1], "ix": 4 },
              "o": { "a": 0, "k": 100, "ix": 5 },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [21.604, 18.16], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 210,
      "st": 0,
      "bm": 0
    }
  ],
  "markers": []
}
